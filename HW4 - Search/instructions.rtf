{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red38\green38\blue38;
\red82\green0\blue83;\red0\green0\blue117;\red83\green85\blue2;\red115\green0\blue2;\red16\green121\blue2;
\red11\green84\blue83;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl520\partightenfactor0

\f0\fs40 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Homework 4: A Project Gutenberg search engine.\
\pard\pardeftab720\sl300\sa40\partightenfactor0

\fs26 \cf4 \strokec4 Folks, as you know I am out of town this week, so I am posting HW4 a little early.\'a0 I know that some of you are still working through HW3, so just ignore this post until after class on Tuesday.\cb1 \
\cb3 \'a0\cb1 \
\cb3 HW4 is due on September 27.\cb1 \
\cb3 \'a0\cb1 \
\cb3 One tip -- you'll want to cache files from Project Gutenberg locally (which is computer science talk for "you'll want to copy files from Project Gutenberg onto a machine you control").\'a0 If Project Gutenberg determines that a single IP address is requesting too many files, it will block access.\'a0\cb1 \
\cb3 \'a0\cb1 \
\cb3 We'll shortly post the example files mentioned here and let you know about that!\cb1 \
\cb3 \'a0\cb1 \
\cb3 -------------------------------------------------\cb1 \
\cb3 \'a0\cb1 \
\cb3 In this assignment, you will make a basic search engine for Project Gutenberg.\cb1 \uc0\u8232 \u8232 \cb3 This assignment is due on September 27 at 9AM.\cb1 \uc0\u8232 \u8232 \cb3 Your program will have three phases.\cb1 \uc0\u8232 \u8232 \cb3 PHASE 1\cb1 \uc0\u8232 \u8232 \cb3 In the first phase, you will load your search engine with the catalog of books through which it will search. You will do this by reading a file that we provide: "
\f1 catalog.txt
\f0 \'94.\'a0 (As we explain below, we provide two such files -- one containing a list of the top 10 book on Project Gutenberg, and the second containing links to some simple files for testing purposes.)\cb1 \uc0\u8232 \u8232 
\f1 \cb3 catalog.txt
\f0  will include on separate lines, input of the following form:\'a0\'a0 Book title,URL\cb1 \uc0\u8232 \u8232 \cb3 For example, 
\f1 catalog.txt
\f0  could contain the following:\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2 \cf5 \cb3 \strokec5 Pride\cf2 \strokec2  \cf6 \strokec6 and\cf2 \strokec2  \cf5 \strokec5 Prejudice\cf7 \strokec7 ,\cf2 \strokec2 http\cf7 \strokec7 :\cf8 \strokec8 //<a href="http://www.gutenberg.org/cache/epub/1342/pg1342.txt" target="_blank">www.gutenberg.org/cache/epub/1342/pg1342.txt</a>\cf2 \strokec2 \
\cf5 \strokec5 The\cf2 \strokec2  \cf5 \strokec5 Yellow\cf2 \strokec2  \cf5 \strokec5 Wallpaper\cf7 \strokec7 ,\cf2 \strokec2 http\cf7 \strokec7 :\cf8 \strokec8 //<a href="http://www.gutenberg.org/cache/epub/1952/pg1952.txt" target="_blank">www.gutenberg.org/cache/epub/1952/pg1952.txt</a>\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl300\sa40\partightenfactor0

\f0 \cf4 \uc0\u8232 \cb3 Your program should create a dictionary 
\f1 Books
\f0  with the book titles as a key.\'a0 For each key, you will assign a value which is itself a 2-item list containing (a) a unique sequential number that you create and assign, starting with 0 and (b) the URL of the book.\cb1 \uc0\u8232 \u8232 \cb3 For the above example, the contents of the dictionary 
\f1 Books
\f0  would thus be\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2 \cf7 \cb3 \strokec7 \{\cf2 \strokec2  \cf9 \strokec9 'Pride and Prejudice'\cf2 \strokec2  \cf7 \strokec7 :\cf2 \strokec2  \cf7 \strokec7 [\cf10 \strokec10 0\cf7 \strokec7 ,\cf2 \strokec2  \cf9 \strokec9 '<a href="http://www.gutenberg.org/cache/epub/1342/pg1342.txt" target="_blank">http://www.gutenberg.org/cache/epub/1342/pg1342.txt</a>'\cf7 \strokec7 ],\cf2 \strokec2  \cf9 \strokec9 'The Yellow Wallpaper'\cf2 \strokec2  \cf7 \strokec7 :\cf2 \strokec2  \cf7 \strokec7 [\cf10 \strokec10 1\cf7 \strokec7 ,\cf2 \strokec2  \cf9 \strokec9 '<a href="http://www.gutenberg.org/cache/epub/1952/pg1952.txt" target="_blank">http://www.gutenberg.org/cache/epub/1952/pg1952.txt</a>'\cf7 \strokec7 ]\cf2 \strokec2  \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl300\sa40\partightenfactor0

\f0 \cf4 \uc0\u8232 \cb3 At the same time, you will also make a list 
\f1 Titles
\f0  containing the titles of the books in book number order, e.g.,\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2 \cf7 \cb3 \strokec7 [\cf9 \strokec9 'Pride and Prejudice'\cf7 \strokec7 ,\cf2 \strokec2  \cf9 \strokec9 'The Yellow Wallpaper'\cf7 \strokec7 ]\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl300\sa40\partightenfactor0

\f0 \cf4 \uc0\u8232 \cb3 We will give you two 
\f1 catalog.txt
\f0  files -- one containing the top 10 titles on Project Gutenberg and the other one containing links to several short text files for debugging purposes.\cb1 \uc0\u8232 \u8232 \cb3 PHASE 2\cb1 \uc0\u8232 \u8232 \cb3 In the second phase, you will populate your search engine with the contents of the books in the catalog. You will use the the Python library called
\f1 urllib
\f0  to open the URL of the books in the catalog.\'a0 (We will talk through the use of 
\f1 urllib
\f0  in lab this week.)\'a0 You will read the text file found at each URL (converting upper-case letters to lower-case letters and discarding punctuation, as in HW 3) and count the words. However, unlike in HW3, we will count the words using a dictionary data structure rather than a binary search tree.\cb1 \uc0\u8232 \u8232 \cb3 To count the words, create a dictionary 
\f1 Words
\f0  with words as an index.\'a0 The value associated with each word will itself be a list (for clarity, let\'92s call this list 
\f1 WordCounts
\f0 ) counting the frequency of that word in each book in the catalog, using the book numbers as an index to 
\f1 WordCounts
\f0 .\'a0 You will read in the contents of each of the books linked to in the catalog and for every word that you encounter, you will increment the corresponding entry in
\f1 WordCounts
\f0  (using the book number as an index into the list 
\f1 WordCounts
\f0 ).\cb1 \uc0\u8232 \u8232 \cb3 For example, if \'93
\f1 declared
\f0 " occurs 15 times in Pride and Prejudice but only once in The Yellow Wallpaper, while "
\f1 daughters
\f0 " occurs 50 times in Pride and Prejudice but does not occur in The Yellow Wallpaper, then:\cb1 \uc0\u8232 \u8232 \cb3 The corresponding entries in the dictionary would be\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2 \cf5 \cb3 \strokec5 Words\cf7 \strokec7 [\cf9 \strokec9 'declared'\cf7 \strokec7 ]\cf2 \strokec2  \cf7 \strokec7 =\cf2 \strokec2  \cf7 \strokec7 [\cf10 \strokec10 15\cf7 \strokec7 ,\cf2 \strokec2  \cf10 \strokec10 1\cf7 \strokec7 ]\cf2 \strokec2 \
\cf5 \strokec5 Words\cf7 \strokec7 [\cf9 \strokec9 'daughters'\cf7 \strokec7 ]\cf2 \strokec2  \cf7 \strokec7 =\cf2 \strokec2  \cf7 \strokec7 [\cf10 \strokec10 50\cf7 \strokec7 ,\cf2 \strokec2  \cf10 \strokec10 0\cf7 \strokec7 ]\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl300\sa40\partightenfactor0

\f0 \cf4 \uc0\u8232 \cb3 PHASE 3\cb1 \uc0\u8232 \u8232 \cb3 In the third phase of your program, your program will perform a search engine function based on input from the user.\'a0 It will run a loop asking for search words until it receives the word \'93
\f1 <terminate>
\f0 \'94.\'a0 It should report books sorted in the order of how many times a word appears in the book.\'a0 (If a word appears an equal number of times in more than one book, it can return those books in any order.)\cb1 \uc0\u8232 \u8232 \cb3 In addition, please implement the following debug commands:\cb1 \uc0\u8232 \u8232 \cb3 \'93
\f1 <catalog>
\f0 \'94 - prints out the contents of the dictionary 
\f1 Books
\f0  in an easy to read format\cb1 \uc0\u8232 \cb3 \'93
\f1 <titles>
\f0 \'94 - prints out the contents of the list 
\f1 Titles
\f0  in an easy to read format\cb1 \uc0\u8232 \u8232 \cb3 Here is a sample session (notice how the program figures out whether it is appropriate to use the word "times" or "time"):\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2 \cf5 \cb3 \strokec5 Search\cf2 \strokec2  term\cf7 \strokec7 ?\cf2 \strokec2   declared\
\pard\pardeftab720\sl320\partightenfactor0
\cf10 \strokec10 1.\cf2 \strokec2   \cf5 \strokec5 The\cf2 \strokec2  word declared appears \cf10 \strokec10 15\cf2 \strokec2  times \cf6 \strokec6 in\cf2 \strokec2  \cf5 \strokec5 Pride\cf2 \strokec2  \cf6 \strokec6 and\cf2 \strokec2  \cf5 \strokec5 Prejudice\cf2 \strokec2  \cf7 \strokec7 (\cf2 \strokec2 link\cf7 \strokec7 :\cf2 \strokec2   http\cf7 \strokec7 :\cf8 \strokec8 //<a href="http://www.gutenberg.org/cache/epub/1342/pg1342.txt" target="_blank">www.gutenberg.org/cache/epub/1342/pg1342.txt</a>)\cf2 \strokec2 \
\cf10 \strokec10 2.\cf2 \strokec2   \cf5 \strokec5 The\cf2 \strokec2  word declared appears \cf10 \strokec10 1\cf2 \strokec2  time \cf6 \strokec6 in\cf2 \strokec2  \cf5 \strokec5 The\cf2 \strokec2  \cf5 \strokec5 Yellow\cf2 \strokec2  \cf5 \strokec5 Wallpaper\cf2 \strokec2  \cf7 \strokec7 (\cf2 \strokec2 link\cf7 \strokec7 :\cf2 \strokec2   http\cf7 \strokec7 :\cf8 \strokec8 //<a href="http://www.gutenberg.org/cache/epub/1952/pg1952.txt" target="_blank">www.gutenberg.org/cache/epub/1952/pg1952.txt</a>)\cf2 \strokec2 \
\
\pard\pardeftab720\sl320\partightenfactor0
\cf5 \strokec5 Search\cf2 \strokec2  term\cf7 \strokec7 ?\cf2 \strokec2   daughters\
\pard\pardeftab720\sl320\partightenfactor0
\cf10 \strokec10 1.\cf2 \strokec2   \cf5 \strokec5 The\cf2 \strokec2  word daughters appears \cf10 \strokec10 50\cf2 \strokec2  times \cf6 \strokec6 in\cf2 \strokec2  \cf5 \strokec5 Pride\cf2 \strokec2  \cf6 \strokec6 and\cf2 \strokec2  \cf5 \strokec5 Prejudice\cf2 \strokec2  \cf7 \strokec7 (\cf2 \strokec2 link\cf7 \strokec7 :\cf2 \strokec2   http\cf7 \strokec7 :\cf8 \strokec8 //<a href="http://www.gutenberg.org/cache/epub/1342/pg1342.txt" target="_blank">www.gutenberg.org/cache/epub/1342/pg1342.txt</a>)\cf2 \strokec2 \
\
\pard\pardeftab720\sl320\partightenfactor0
\cf5 \strokec5 Search\cf2 \strokec2  term\cf7 \strokec7 ?\cf2 \strokec2   groucho\
\cf5 \strokec5 The\cf2 \strokec2  word groucho does \cf6 \strokec6 not\cf2 \strokec2  appear \cf6 \strokec6 in\cf2 \strokec2  any books \cf6 \strokec6 in\cf2 \strokec2  the library\
\
\cf5 \strokec5 Search\cf2 \strokec2  term\cf7 \strokec7 ?\cf2 \strokec2   \cf9 \strokec9 <catalog>\cf2 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf9 \strokec9 'Pride and Prejudice'\cf2 \strokec2  \cf7 \strokec7 :\cf2 \strokec2  \cf7 \strokec7 [\cf10 \strokec10 0\cf7 \strokec7 ,\cf2 \strokec2  \cf9 \strokec9 '<a href="http://www.gutenberg.org/cache/epub/1342/pg1342.txt" target="_blank">http://www.gutenberg.org/cache/epub/1342/pg1342.txt</a>'\cf7 \strokec7 ]\cf2 \strokec2 \
\cf9 \strokec9 'The Yellow Wallpaper'\cf2 \strokec2  \cf7 \strokec7 :\cf2 \strokec2  \cf7 \strokec7 [\cf10 \strokec10 1\cf7 \strokec7 ,\cf2 \strokec2  \cf9 \strokec9 '<a href="http://www.gutenberg.org/cache/epub/1952/pg1952.txt" target="_blank">http://www.gutenberg.org/cache/epub/1952/pg1952.txt</a>'\cf7 \strokec7 ]\cf2 \strokec2 \
\
\pard\pardeftab720\sl320\partightenfactor0
\cf5 \strokec5 Search\cf2 \strokec2  term\cf7 \strokec7 ?\cf2 \strokec2   \cf9 \strokec9 <titles>\cf2 \strokec2 \
\cf5 \strokec5 Pride\cf2 \strokec2  \cf6 \strokec6 and\cf2 \strokec2  \cf5 \strokec5 Prejudice\cf2 \strokec2 \
\cf5 \strokec5 The\cf2 \strokec2  \cf5 \strokec5 Yellow\cf2 \strokec2  \cf5 \strokec5 Wallpaper\cf2 \strokec2 \
\
\cf5 \strokec5 Search\cf2 \strokec2  term\cf7 \strokec7 ?\cf2 \strokec2   \cf9 \strokec9 <terminate>\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl300\sa40\partightenfactor0

\f0 \cf4 \uc0\u8232 \cb3 TESTING AND SUBMISSION\cb1 \uc0\u8232 \u8232 \cb3 Please extensively and carefully test your assignment. \cb1 \uc0\u8232 \u8232 \cb3 In your write up, please discuss these issues:\'a0 What are the boundary cases? What happens if 
\f1 catalog.txt
\f0  comes in an unexpected format? What happens if a link is broken or the contents come in an unexpected format? etc.\'a0 \cb1 \uc0\u8232 \u8232 \cb3 When your program is complete, put it in a script named 
\f1 hw4.<userid>.py
\f0 .\'a0 Write a document (acceptable formats include pdf and text files) explaining how you tested your program (what test cases and strategies did you use) and the answer to the above question as 
\f1 hw4-test.<userid>.txt
\f0  or 
\f1 hw4-test.<userid>.pdf
\f0 .\'a0 Upload these files using the file upload tool available at\'a0
\f1 <a href="https://www.ischool.berkeley.edu/uploader/?s=i206" target="_blank">https://www.ischool.berkeley.edu/uploader/?s=i206</a>
\f0 \'a0 Login with your ISchool userid and password and follow the directions.\cb1 \uc0\u8232 \u8232 \cb3 EXTRA CREDIT\cb1 \uc0\u8232 \u8232 \cb3 For extra credit, write an additional program to automatically generate the top 10 books 
\f1 catalog.txt
\f0  from this web page (top 100 EBooks yesterday):\'a0 
\f1 <a href="http://www.gutenberg.org/browse/scores/top" target="_blank">http://www.gutenberg.org/browse/scores/top</a>
\f0 \cb1 \
}